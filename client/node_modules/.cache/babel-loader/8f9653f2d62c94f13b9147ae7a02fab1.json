{"ast":null,"code":"import _toConsumableArray from\"/Users/kiwonkim/Desktop/chat/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/kiwonkim/Desktop/chat/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import queryString from'query-string';import io from'socket.io-client';import InfoBar from'../InfoBar/InfoBar';import Input from'../Input/Input';import Messages from'../Messages/Messages';import TextContainer from'../TextContainer/TextContainer';import'./Chat.css';var socket;var Chat=function Chat(_ref){var location=_ref.location;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),room=_useState4[0],setRoom=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),users=_useState6[0],setUsers=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),messages=_useState10[0],setMessages=_useState10[1];var ENDPOINT='localhost:5000';useEffect(function(){var _queryString$parse=queryString.parse(location.search),name=_queryString$parse.name,room=_queryString$parse.room;socket=io(ENDPOINT);setName(name);setRoom(room);socket.emit('join',{name:name,room:room},function(error){if(error){alert(error);}});},[ENDPOINT,location.search]);useEffect(function(){socket.on('message',function(message){setMessages([].concat(_toConsumableArray(messages),[message]));});socket.on('roomData',function(_ref2){var users=_ref2.users;setUsers(users);});return function(){socket.emit('disconnect');socket.off();};},[message]);var sendMessage=function sendMessage(event){event.preventDefault();if(message){socket.emit('sendMessage',message,function(){return setMessage('');});}};console.log(message,messages,'message, messages');return React.createElement(\"div\",{className:\"outerContainer\"},React.createElement(\"div\",{className:\"container\"},React.createElement(InfoBar,{room:room}),React.createElement(Messages,{messages:messages,name:name}),React.createElement(Input,{message:message,setMessage:setMessage,sendMessage:sendMessage})),React.createElement(TextContainer,{users:users}));};export default Chat;","map":{"version":3,"sources":["/Users/kiwonkim/Desktop/chat/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","Messages","TextContainer","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","alert","on","off","sendMessage","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport TextContainer from '../TextContainer/TextContainer';\n\nimport './Chat.css';\n\nlet socket;\n\nconst Chat = ({ location }) => {\n\n    const [ name, setName ] = useState('');\n    const [ room, setRoom ] = useState('');\n    const [ users, setUsers ] = useState('')\n    const [ message, setMessage ] = useState('');\n    const [ messages, setMessages ] = useState([]);\n    const ENDPOINT = 'localhost:5000';\n\n    useEffect(() => {\n        const { name, room } = queryString.parse(location.search);\n\n        socket = io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n\n        socket.emit('join', { name: name, room: room }, (error) => {\n            if(error) {\n                alert(error);\n            }\n        });\n    }, [ENDPOINT, location.search]);\n\n    useEffect(() => {\n\n        socket.on('message', (message) => {\n            setMessages([...messages, message]);\n        });\n\n        socket.on('roomData', ({users}) => {\n            setUsers(users);\n        })\n\n        return () => {\n            socket.emit('disconnect');\n\n            socket.off();\n        }\n    }, [ message ])\n\n    const sendMessage = (event) => {\n        event.preventDefault();\n\n        if(message) {\n            socket.emit('sendMessage', message, () => setMessage(''));\n        }\n    }\n\n    console.log(message, messages, 'message, messages');\n\n    return (\n        <div className=\"outerContainer\">\n            <div className=\"container\">\n                <InfoBar room={room} />\n                <Messages messages={messages} name={name} />\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n            </div>\n            <TextContainer users={users} />\n        </div>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}